#!/usr/bin/env ruby

require 'thor'
require 'lobstr'

class Lob < Thor
  desc "deploy TARGET", "lobs code at the branch and environment you specify"
  long_desc "lobs code at the branch and environment you specify, separated by @
  \n\n 
  Example: lob deploy master@production"  
  def deploy(target='master@production')
    lobstr = Lobstr::Deploy.new
    branch,env = lobstr.parse_target(target)

    say "deploying #{set_color(branch,:yellow)} to #{set_color(env, :yellow)}"
  end
  default_task :deploy

  desc "config", "displays current configuration"
  long_desc "displays current configuration"
  method_option :init, :type => :boolean, :default => false,
    :desc => "creates the configurtion file, unless it exists"
  method_option :reset, :type => :boolean, :default => false,
    :desc => "removes current configuration file and creates a new one"
  def config
    @config = Lobstr::Config.new

    if options['init']
      say "Created Lobstr Config:", :green if @config.init
    end
    
    if options['reset']
      say "Reset Lobstr Config:", :red if @config.reset
    end

    say @config.print
  end
end

begin
  ENV['THOR_DEBUG'] = '1'
  Lob.start 
rescue Thor::UndefinedTaskError => e
  if ARGV[0] =~ /@/
    Lob.new.invoke(:deploy, ARGV)
  else
    Lob.new.say e.message, :on_red
  end
rescue => e
  Lob.new.say e.message, :on_red
end
