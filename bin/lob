#!/usr/bin/env ruby

require 'thor'
require 'lobstr'

class Lob < Thor


  desc "deploy TARGET", "lobs code at the branch and environment you specify"
  long_desc "lobs code at the branch and environment you specify, separated by @
  \n\n 
  Example: lob deploy master@production"
  def deploy(target='master@production')
    if File.exist? 'Lobfile'
      Lobstr.target = target      
      load "Lobfile"
    else
      lobstr target do
        deploy
      end
    end
  end
  default_task :deploy

  desc "rollback ENVIRONMENT", "rolls the last deployment back"
  def rollback(environment)
    lobstr environment do
      connect do
        rollback
        notify(:rollback)
      end
    end
  end

  desc "config", "displays current configuration"
  long_desc "displays current configuration"
  method_option :init, :type => :boolean, :default => false,
    :desc => "creates the configurtion file, unless it exists"
  method_option :reset, :type => :boolean, :default => false,
    :desc => "removes current configuration file and creates a new one"
  def config
    @config = Lobstr::Config.new

    if options['init']
      say "Created Lobstr Config:", :green if @config.create
    end
    
    if options['reset']
      say "Reset Lobstr Config:", :red if @config.reset
    end

    say @config.print
  end
end

begin
  ENV['THOR_DEBUG'] = '1'
  Lob.start 
rescue Thor::UndefinedTaskError => e
  if ARGV[0] =~ /@/
    Lob.new.invoke(:deploy, ARGV)
  else
    Lob.new.say e.message, :red
  end
rescue => e
  p e
  p e.backtrace.last
  Lob.new.say e.message, :on_red
end
